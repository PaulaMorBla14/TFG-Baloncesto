# DATA

players_L <- paste("LocalPlayer",1:10)
players_A <- paste("AwayPlayer",1:10)


toy <- data.frame(
  "id_play" = 1:15,
  "points_L" = c(0,0,0,2,2,2,5,5,7,7,7,7,10,10,12),
  "points_A" = c(0,2,2,2,4,4,7,7,9,9,10,10,9,9,9),
  "LP1" = c(rep(players_L[1],4),rep(players_L[6],5),rep(players_L[1],6)),
  "LP2" = players_L[2],
  "LP3" = c(rep(players_L[3],7), rep(players_L[7],2),rep(players_L[3],6)),
  "AP1" = players_A[1],
  "AP2" = c(rep(players_A[2],8),players_A[7], rep(players_A[2],6)),
  "AP3" = players_A[3]
  )

toy_backup <- toy

library(tidyr)
toy <- toy %>% unite('Merged', LP1:AP3, remove = FALSE)




# CAMBIOS

players_Merged <- toy$Merged == lag(toy$Merged)

df_SamePlayers <- data.frame(
  "ID_row" = 1:15,
  "TF" = c(players_Merged[-1], "FALSE") #Eliminamos el primer NA y añadimos FALSE a la ultima entrada
)

df_SamePlayers
df_SamePlayers[!(df_SamePlayers$TF=="TRUE"),]

#Hay que quedarse filas: 4, 7, 8, 9, 15


players_Merged <- toy$Merged == lag(toy$Merged)               #TF igual que lag row

toy$TF <- ifelse(players_Merged == FALSE, "C", "NC")  #TRUE FALSE, si hay cambios o no. Si es igual al maximo, no han habido cambios (NC).

#hasta aquí tenemos detectados cuando hay cambios




# STINTS

toy$stint <- ifelse(lead(toy$TF)=="C", toy$TF, NA) #Filas que tenemos que conservar

last_row = tail(toy, n =1)                         #Tendremos que añadirla al final.

library(tidyr)
STINTS <- toy %>% drop_na(stint)
STINTS <- rbind(STINTS, last_row)
STINTS
