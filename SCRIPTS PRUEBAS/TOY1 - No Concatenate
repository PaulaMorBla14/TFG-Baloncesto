# DATA

players_L <- paste("LocalPlayer",1:10)
players_A <- paste("AwayPlayer",1:10)


toy <- data.frame(
  "id_play" = 1:15,
  "points_L" = c(0,0,0,2,2,2,5,5,7,7,7,7,10,10,12),
  "points_A" = c(0,2,2,2,4,4,7,7,9,9,10,10,9,9,9),
  "LP1" = c(rep(players_L[1],4),rep(players_L[6],5),rep(players_L[1],6)),
  "LP2" = players_L[2],
  "LP3" = c(rep(players_L[3],7), rep(players_L[7],2),rep(players_L[3],6)),
  "AP1" = players_A[1],
  "AP2" = c(rep(players_A[2],8),players_A[7], rep(players_A[2],6)),
  "AP3" = players_A[3]
  )
toy_backup <- toy




# Cambios con for

all(toy[5,4:9] == toy[4,4:9]) #todo true?

TF<- vector()

for (i in 1:15) {
  TF[i] <- all(toy[i+1,4:9] == toy[i,4:9])
}

df_SamePlayers <- data.frame(
  "ID_row" <- 1:15,
  "TF" <- TF
)
df_SamePlayers[15, 2] = FALSE #Necesitamos ultimo stint

df_SamePlayers
names(df_SamePlayers)<-c("ID", "TF")

df_SamePlayers[!(df_SamePlayers$TF=="TRUE"),]

### Hay que quedarse filas: 4, 7, 8, 9, 15



# Cambios sin for

toy_p <- toy[,4:9]                           # Data con solo jugadores en pista
colnames(toy_p)
toy_p_TF <- toy_p == lag(toy_p)              # TF igual que lag row

toy_p_TF_df <- data.frame(matrix(as.numeric(toy_p_TF), ncol = 6))
colnames(toy_p_TF_df) <- colnames(toy_p)

toy_p_TF_df$RowSum <- rowSums(toy_p_TF_df)  # Suma por filas.

max <- max(toy_p_TF_df$RowSum[2:15]) #para que no detecte como maximo el NA

toy$TF <- ifelse(toy_p_TF_df$RowSum == max, "NC", "C")  # TRUE FALSE, si hay cambios o no. Si es igual al maximo, no han habido cambios (NC).

### Hasta aquÃ­ tenemos detectados cuando hay cambios



# STINTS

toy$stint <- ifelse(lead(toy$TF)=="C", toy$TF, NA) # Filas que tenemos que conservar

last_row = tail(toy, n =1)

library(tidyr)
STINTS <- toy %>% drop_na(stint)
STINTS <- rbind(STINTS, last_row)
STINTS
